{"ast":null,"code":"var _jsxFileName = \"/Users/braeden/cmsc355proj/my-app/frontend/src/pages/PlaylistCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PlaylistCreator.css';\nimport { useNavigate } from 'react-router-dom';\nimport { LoggedIn } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistCreator = () => {\n  _s();\n  const [playlistName, setPlaylistName] = useState('');\n  const [firstSong, setFirstSong] = useState('');\n  const navigate = useNavigate();\n  const handleCreatePlaylist = () => {\n    // Here, you would typically send the playlist data to a server or perform some other action\n    console.log(`Creating playlist \"${playlistName}\" with first song \"${firstSong}\"`);\n    // Reset the input fields after creating the playlist\n    setPlaylistName('');\n    setFirstSong('');\n    if (LoggedIn === false) {\n      navigate('/LandingPage');\n    } else {\n      navigate('/PlaylistPage');\n    }\n  };\n  const handleCancel = () => {\n    // Reset the input fields\n    setPlaylistName('');\n    setFirstSong('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-creator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playlistName\",\n        children: \"Playlist Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"playlistName\",\n        value: playlistName,\n        onChange: e => setPlaylistName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstSong\",\n        children: \"First Song:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstSong\",\n        value: firstSong,\n        onChange: e => setFirstSong(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePlaylist,\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistCreator, \"q11Zg60iQgKUPZPhpqnhdjP8U/k=\", false, function () {\n  return [useNavigate];\n});\n_c = PlaylistCreator;\nexport default PlaylistCreator;\nvar _c;\n$RefreshReg$(_c, \"PlaylistCreator\");","map":{"version":3,"names":["React","useState","useNavigate","LoggedIn","jsxDEV","_jsxDEV","PlaylistCreator","_s","playlistName","setPlaylistName","firstSong","setFirstSong","navigate","handleCreatePlaylist","console","log","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/braeden/cmsc355proj/my-app/frontend/src/pages/PlaylistCreator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PlaylistCreator.css';\nimport { useNavigate } from 'react-router-dom'\nimport { LoggedIn } from './App'\n\nconst PlaylistCreator = () => {\n  const [playlistName, setPlaylistName] = useState('');\n  const [firstSong, setFirstSong] = useState('');\n  const navigate = useNavigate();\n\n  const handleCreatePlaylist = () => {\n    // Here, you would typically send the playlist data to a server or perform some other action\n    console.log(`Creating playlist \"${playlistName}\" with first song \"${firstSong}\"`);\n    // Reset the input fields after creating the playlist\n    setPlaylistName('');\n    setFirstSong('');\n    if (LoggedIn === false) {\n      navigate('/LandingPage')\n    } else {\n      navigate('/PlaylistPage')\n    }\n  \n\n  };\n\n  const handleCancel = () => {\n    // Reset the input fields\n    setPlaylistName('');\n    setFirstSong('');\n  };\n\n  return (\n    <div className=\"playlist-creator\">\n      <h2>Create New Playlist</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"playlistName\">Playlist Name:</label>\n        <input\n          type=\"text\"\n          id=\"playlistName\"\n          value={playlistName}\n          onChange={(e) => setPlaylistName(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"firstSong\">First Song:</label>\n        <input\n          type=\"text\"\n          id=\"firstSong\"\n          value={firstSong}\n          onChange={(e) => setFirstSong(e.target.value)}\n        />\n      </div>\n      <div className=\"button-group\">\n        <button onClick={handleCreatePlaylist}>Create Playlist</button>\n        <button onClick={handleCancel}>Cancel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistCreator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}